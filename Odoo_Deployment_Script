#!/bin/bash

#--------------------------------------------------
# Odoo 18 Installation Script (Final & Corrected)
#--------------------------------------------------

# Update these variables for your specific setup
ODOO_USER="odoo"
ODOO_VERSION="18.0"
PYTHON_VERSION="3.12"
REPO_URL="https://github.com/odoo/odoo.git"
DB_PASSWORD="Kshitij566"
SOURCE_DIR="/opt/odoo/odoo-server"
LOG_DIR="/var/log/odoo"

# Define the virtual environment directory
VENV_DIR="${SOURCE_DIR}/venv"

#--------------------------------------------------
# 1. System Setup
#--------------------------------------------------

echo "Updating system and installing dependencies..."
sudo apt-get update -y
sudo apt-get upgrade -y
# This list now includes libsasl2-dev to fix the final compilation error
sudo apt-get install -y git python3-dev python3-pip python3-venv build-essential wget vim libpq-dev libxml2-dev libxslt1-dev libzip-dev zlib1g-dev libjpeg-dev libpng-dev libfreetype6-dev liblcms2-dev libwebp-dev libtiff5-dev libssl-dev libffi-dev libopenjp2-7-dev libtiff-tools libldap2-dev libsasl2-dev

#--------------------------------------------------
# 2. PostgreSQL Setup
#--------------------------------------------------

echo "Installing and configuring PostgreSQL..."
sudo apt-get install -y postgresql
sudo service postgresql start

# Create a new PostgreSQL user and set a password
sudo su - postgres -c "psql -c \"CREATE USER ${ODOO_USER} WITH CREATEDB PASSWORD '${DB_PASSWORD}';\""

#--------------------------------------------------
# 3. Odoo User and Directory Setup
#--------------------------------------------------

echo "Setting up Odoo user and directories..."
sudo adduser --system --home ${SOURCE_DIR} --group ${ODOO_USER}

# Create Odoo and log directories
sudo mkdir -p /opt/odoo
sudo chown -R ${ODOO_USER}:${ODOO_USER} /opt/odoo

sudo mkdir -p ${LOG_DIR}
sudo chown -R ${ODOO_USER}:${ODOO_USER} ${LOG_DIR}

#--------------------------------------------------
# 4. Clone Odoo Repository and Install Python Dependencies
#--------------------------------------------------

echo "Cloning Odoo repository..."
# This command is now run as the odoo user, which has permissions for /opt/odoo
sudo -u ${ODOO_USER} git clone --depth 1 --branch ${ODOO_VERSION} ${REPO_URL} ${SOURCE_DIR}

echo "Creating Python virtual environment..."
# This command is now run as the odoo user
sudo -u ${ODOO_USER} python3 -m venv ${VENV_DIR}

echo "Installing Python requirements..."
# This command is now run as the odoo user
sudo -u ${ODOO_USER} ${VENV_DIR}/bin/pip install -r ${SOURCE_DIR}/requirements.txt

#--------------------------------------------------
# 5. Create Odoo Configuration File
#--------------------------------------------------

echo "Creating Odoo configuration file..."
CONFIG_FILE="/etc/${ODOO_USER}/${ODOO_USER}.conf"
sudo mkdir -p /etc/${ODOO_USER}
sudo tee ${CONFIG_FILE} > /dev/null <<EOL
[options]
; This is the path to the Odoo source code.
addons_path = ${SOURCE_DIR}/addons

; The port Odoo will listen on. This should be different from the port used by your reverse proxy (e.g., Nginx).
http_port = 8069

; The database user and password.
db_user = ${ODOO_USER}
db_password = ${DB_PASSWORD}

; The database host (if it's on the same server, use 'localhost').
db_host = localhost
db_port = 5432
; Specify a log file.
logfile = ${LOG_DIR}/${ODOO_USER}-server.log
EOL

sudo chown -R ${ODOO_USER}:${ODOO_USER} /etc/${ODOO_USER}
sudo chmod 640 ${CONFIG_FILE}

#--------------------------------------------------
# 6. Create Systemd Service File
#--------------------------------------------------

echo "Creating Odoo systemd service file..."
SERVICE_FILE="/etc/systemd/system/${ODOO_USER}.service"
sudo tee ${SERVICE_FILE} > /dev/null <<EOL
[Unit]
Description=Odoo Server
Requires=postgresql.service
After=network.target postgresql.service

[Service]
Type=simple
User=${ODOO_USER}
Group=${ODOO_USER}
ExecStart=${VENV_DIR}/bin/python ${SOURCE_DIR}/odoo-bin -c ${CONFIG_FILE}
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOL

#--------------------------------------------------
# 7. Enable and Start Odoo Service
#--------------------------------------------------

echo "Enabling and starting Odoo service..."
sudo systemctl daemon-reload
sudo systemctl start ${ODOO_USER}
sudo systemctl enable ${ODOO_USER}

echo "Odoo installation complete!"
echo "You can check the status of the service by running 'sudo systemctl status ${ODOO_USER}'."
